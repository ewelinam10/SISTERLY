{"version":3,"sources":["Components/Button.tsx","Pages/RegistrationForm.tsx","images/logo.svg","app/hooks.ts","features/usersession/userSessionSlice.ts","Components/NavigationBar.tsx","Pages/MentorRegistration.tsx","images/hearticon.svg","Components/About.tsx","images/main_image.jpeg","Components/EmailForm.tsx","Components/LandingContainer.tsx","Components/Step.tsx","images/step_1.svg","images/step_2.svg","images/step_3.svg","images/step_4.svg","Components/HowItWorksContainer.tsx","Components/RecomendationCard.tsx","images/em_portret.jpg","images/MW_foto.jpg","images/kasia.jpg","Components/RecomendationContainer.tsx","images/icons/plus-icon.svg","Components/CommonQuestionsContainer.tsx","Pages/LandingPage.tsx","Pages/App.tsx","features/counter/counterAPI.ts","features/counter/counterSlice.ts","app/store.ts","serviceWorker.ts","index.tsx"],"names":["fadeIn","keyframes","color","StyledButton","styled","Button","RegistrationForm","useState","validated","setValidated","Form","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","Row","Group","as","Col","md","controlId","Label","Control","required","type","placeholder","defaultValue","Feedback","InputGroup","hasValidation","Prepend","Text","id","aria-describedby","Check","label","feedback","useAppSelector","useSelector","initialState","isLogged","localStorage","getItem","username","userSessionSlice","createSlice","name","reducers","logout","state","setItem","login","action","payload","actions","isUserLoggedIn","userSession","userName","NavigationBar","options","dispatch","useDispatch","navLinks","isLoggedIn","onLogoutClick","push","Nav","Link","href","NavDropdown","title","Item","Divider","onClick","getNavDrop","getLinks4LoggedInUser","process","getMainLinks","Navbar","sticky","expand","Brand","width","src","image","Toggle","aria-controls","Collapse","className","MentorRegistration","AboutContainer","heartImg","EmailElement","controlClass","xs","LandingContainer","EmailForm","Step","img","desc","HowItWorksContainer","step1","step2","step3","step4","RecomendationCard","hashtagsElements","i","hashtags","length","RecomendationContainer","mwportret","kmportret","emportret","style","backgroundColor","Accordion","defaultActiveKey","eventKey","PlusIcon","Card","Body","LandingPage","About","CommonQuestionsContainer","App","history","createHistory","path","component","fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","value","status","increment","decrement","incrementByAmount","extraReducers","builder","addCase","pending","fulfilled","store","configureStore","reducer","counter","counterReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e7c93181.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Button } from 'react-bootstrap';\r\nconst fadeIn = keyframes`\r\n  0% {\r\n    opacity: 20%;\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n  }\r\n`\r\nconst color = '#FF5E78'; // nie wiem jak zaimportowac ze styli base-pink\r\n\r\nconst StyledButton = styled(Button)`\r\nanimation: 3s ${fadeIn} ease-out;\r\ntext-align: center;\r\ntext-decoration: none;\r\nbackground-color: ${color};\r\nborder: 2px solid $color;\r\ndisplay: inline-block;\r\nfont-size :1rem;\r\nborder-radius: 0.3em;\r\nborder-color: ${color};\r\ntransition: all 0.2s ease-in-out;\r\nposition: relative;\r\noverflow: hidden;\r\n&:before {\r\n  content: \"\";\r\n  background-color: rgba(255,255,255,0.5);\r\n  height: 100%;\r\n  width: 3em;\r\n  display: block;\r\n  position: absolute;\r\n  top: 0;\r\n  left: -4.5em;\r\n  transform: skewX(-45deg) translateX(0);\r\n  transition: none;\r\n}\r\n&:hover {\r\n  background-color: $color !important;\r\n  color: #fff;\r\n  border-color: ${color};\r\n  &:before {\r\n    transform: skewX(-45deg) translateX(13.5em);\r\n   transition: all 0.5s ease-in-out;\r\n  }\r\n}\r\n`;\r\n\r\nexport default StyledButton;","import React, {useState} from 'react';\r\nimport {Form, Button, Col, InputGroup} from 'react-bootstrap';\r\nimport StyledButton from '../Components/Button';\r\nimport '../styles/Button.scss'\r\n\r\nfunction RegistrationForm() {\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    const handleSubmit = (event) => {\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        setValidated(true);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} md=\"4\" controlId=\"validationCustom01\">\r\n                        <Form.Label>First name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type=\"text\"\r\n                            placeholder=\"First name\"\r\n                            defaultValue=\"Mark\"\r\n                        />\r\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\r\n                        <Form.Label>Last name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type=\"text\"\r\n                            placeholder=\"Last name\"\r\n                            defaultValue=\"Otto\"\r\n                        />\r\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md=\"4\" controlId=\"validationCustomUsername\">\r\n                        <Form.Label>Username</Form.Label>\r\n                        <InputGroup hasValidation>\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Username\"\r\n                                aria-describedby=\"inputGroupPrepend\"\r\n                                required\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please choose a username.\r\n                            </Form.Control.Feedback>\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} md=\"6\" controlId=\"validationCustom03\">\r\n                        <Form.Label>City</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"City\" required/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a valid city.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md=\"3\" controlId=\"validationCustom04\">\r\n                        <Form.Label>State</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"State\" required/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a valid state.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\r\n                        <Form.Label>Zip</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Zip\" required/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a valid zip.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Group>\r\n                    <Form.Check\r\n                        required\r\n                        label=\"Agree to terms and conditions\"\r\n                        feedback=\"You must agree before submitting.\"\r\n                    />\r\n                </Form.Group>\r\n                <StyledButton type=\"submit\">Zarejestruj się</StyledButton>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default RegistrationForm;\r\n\r\n","export default __webpack_public_path__ + \"static/media/logo.1709ba9f.svg\";","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../../app/store';\r\n\r\nexport interface UserSessionState {\r\n  isLogged: boolean;\r\n  username: string;\r\n}\r\n\r\nconst initialState: UserSessionState = {\r\n  isLogged: localStorage.getItem('isLogged') == 'true' ? true : false,\r\n  username: localStorage.getItem('username') ?? ''\r\n}\r\n\r\nexport const userSessionSlice = createSlice({\r\n  name: 'userSession',\r\n  initialState,\r\n  reducers: {\r\n    logout: (state) => {\r\n      localStorage.setItem('isLogged','false');\r\n      localStorage.setItem('username','');\r\n      state.isLogged = false;\r\n      state.username = \"\";\r\n    },\r\n    login: (state, action: PayloadAction<string>) => {\r\n      localStorage.setItem('isLogged','true');\r\n      localStorage.setItem('username',action.payload);\r\n      state.isLogged = true\r\n      state.username = action.payload\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSessionSlice.actions;\r\n\r\nexport const isUserLoggedIn = (state: RootState) => state.userSession.isLogged;\r\n\r\nexport const userName = (state: RootState) => state.userSession.username;\r\n\r\nexport default userSessionSlice.reducer;\r\n","\r\nimport { Navbar, Nav, FormControl, Form, NavDropdown, Button, NavLink } from 'react-bootstrap';\r\nimport image from '../images/logo.svg'\r\nimport { useAppDispatch } from '../app/hooks';\r\nimport { logout } from \"../features/usersession/userSessionSlice\";\r\n\r\n\r\ninterface NavigationBarProps {\r\n    isLoggedIn: boolean;\r\n}\r\n\r\nconst NavigationBar: React.FC<NavigationBarProps> = (options: NavigationBarProps) => {\r\n    const dispatch = useAppDispatch();\r\n    const onLogoutClick = () => {\r\n        dispatch(logout());\r\n    };\r\n    let navLinks: JSX.Element[] = options.isLoggedIn ? getLinks4LoggedInUser(onLogoutClick) : getMainLinks();\r\n    return (\r\n        <Navbar sticky=\"top\" expand=\"lg\">\r\n            <Navbar.Brand href=\"/\">\r\n                <img width='45%' src={image} />\r\n\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse className=\"justify-content-end\" id=\" basic-navbar-nav\">\r\n                <Nav>\r\n                    {navLinks}\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar >\r\n    );\r\n}\r\n\r\nfunction getLinks4LoggedInUser(onLogoutClick: () => void): JSX.Element[] {\r\n    let navLinks: JSX.Element[] = [];\r\n    navLinks.push(<Nav.Link href=\"/addGroup\">ZAŁÓŻ KRĄG</Nav.Link>);\r\n    navLinks.push(<Nav.Link href=\"/myTools\">WIDOK SPOTKANIA</Nav.Link>);\r\n    navLinks.push(<Nav.Link href=\"/mentors\">MENTORZY</Nav.Link>);\r\n    navLinks.push(<Nav.Link href=\"/knowhow\">BAZA WIEDZY</Nav.Link>);\r\n    navLinks.push(getNavDrop(onLogoutClick));\r\n\r\n    return navLinks;\r\n}\r\n\r\nfunction getNavDrop(onLogoutClick: () => void): JSX.Element {\r\n    return (<NavDropdown title='' id=\"nav-dropdown\">\r\n        <NavDropdown.Item href='/editprofile'>EDYTUJ PROFIL</NavDropdown.Item>\r\n        <NavDropdown.Item href='/rules'>KODEKS SISTERLY</NavDropdown.Item>\r\n        <NavDropdown.Divider />\r\n        <NavDropdown.Item onClick={onLogoutClick} href='/'>WYLOGUJ</NavDropdown.Item>\r\n    </NavDropdown>);\r\n}\r\n\r\n\r\n\r\nfunction getMainLinks(): JSX.Element[] {\r\n    let navLinks: JSX.Element[] = [];\r\n    navLinks.push(<Nav.Link href=\"/singin\">ZALOGUJ</Nav.Link>);\r\n    navLinks.push(<Nav.Link href={process.env.PUBLIC_URL + '/signup'}>ZAŁÓŻ KONTO</Nav.Link>);\r\n    navLinks.push(<Nav.Link href=\"/mentor_registration\">ZOSTAŃ MENTOREM</Nav.Link>);\r\n    return navLinks;\r\n}\r\n\r\nexport default NavigationBar;","import React from \"react\";\r\n\r\nfunction MentorRegistration() {\r\n    return (\r\n        <div>\r\n            Tu będzie formularz dla mentora ;)\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MentorRegistration;","export default __webpack_public_path__ + \"static/media/hearticon.82676ea2.svg\";","import heartImg from \"../images/hearticon.svg\"\r\n\r\nconst AboutContainer = () => {\r\n    return (\r\n        <div className='about-container'>\r\n            <h1>Czym jest Sisterly? </h1>\r\n            <h3>\r\n                Na platformie Sisterly pomagamy kobietom spotykać się on-line w małych (do 5 osób) grupach skupionych wokół ważnego dla Was tematu lub celu.\r\n\r\n                <br /><br />\r\n\r\n                Czegokolwiek aktualnie potrzebujecie: motywacji do realizacji projektu czy luźnej rozmowy o zainteresowaniach - jesteśmy dla Was, bo wiemy, że w KRĘGU SIŁA, W KRĘGU ROŚNIESZ\r\n                <img className='animate__backInDown' src={heartImg} />\r\n            </h3>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AboutContainer;","export default __webpack_public_path__ + \"static/media/main_image.5ca026ed.jpeg\";","import {Col, Form, Row} from \"react-bootstrap\";\r\nimport StyledButton from \"./Button\";\r\n\r\n\r\nconst EmailElement = () => {\r\n\r\n    return (\r\n        <Form>\r\n            <Form.Group as={Row} controlClass='emailform'>\r\n                <Col xs={7} className='emailForm'>\r\n                    <Form.Control type=\"email\" placeholder=\"example@gmail.com\"/>\r\n                </Col>\r\n                <StyledButton>DOŁĄCZ!</StyledButton>\r\n            </Form.Group>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default EmailElement;","import {Form, Button, Col, Row} from 'react-bootstrap';\r\nimport image from '../images/main_image.jpeg'\r\nimport StyledButton from './/Button'\r\nimport EmailForm from \"./EmailForm\";\r\n\r\nconst LandingContainer = () => {\r\n    return (\r\n        <div className='landing-container'>\r\n            <div>\r\n                <div className='welcome-text'>\r\n                    <h1>ZNAJDŹ WSPARCIE <br/>W SIOSTRZANYM KRĘGU</h1>\r\n                    <span>\r\n                        Sisterly, to jedyne takie miejsce w sieci, oparte na życzliwości i siostrzanym wsparciu.\r\n                    </span>\r\n                </div>\r\n\r\n                <EmailForm/>\r\n\r\n                {/*<Form>*/}\r\n                {/*    <Form.Group as={Row} controlClass='emailform'>*/}\r\n                {/*        <Col xs={7} className='emailForm'>*/}\r\n                {/*            <Form.Control type=\"email\" placeholder=\"example@gmail.com\"/>*/}\r\n                {/*        </Col>*/}\r\n                {/*        <StyledButton>DOŁĄCZ!</StyledButton>*/}\r\n                {/*    </Form.Group>*/}\r\n                {/*</Form>*/}\r\n            </div>\r\n\r\n            <div>\r\n                <img src={image}/>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default LandingContainer;","\r\n\r\ninterface StepProps {\r\n    img: string;\r\n    title: string;\r\n    desc: string;\r\n}\r\n\r\nconst Step: React.FC<StepProps> = (options: StepProps) => {\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div>\r\n                <img src={options.img} />\r\n            </div>\r\n            <div>\r\n                <h2> {options.title} </h2>\r\n                {options.desc}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Step;","export default __webpack_public_path__ + \"static/media/step_1.7f905426.svg\";","export default __webpack_public_path__ + \"static/media/step_2.14938917.svg\";","export default __webpack_public_path__ + \"static/media/step_3.976f709d.svg\";","export default __webpack_public_path__ + \"static/media/step_4.c933890f.svg\";","import React from \"react\";\r\nimport Step from \"./Step\";\r\nimport step1 from \"../images/step_1.svg\";\r\nimport step2 from \"../images/step_2.svg\";\r\nimport step3 from \"../images/step_3.svg\";\r\nimport step4 from \"../images/step_4.svg\";\r\n\r\n\r\nconst HowItWorksContainer = () => {\r\n\r\n    return (\r\n\r\n        <div>\r\n            <h1>Jak to działa?</h1>\r\n            <div className='steps_container'>\r\n                <Step title='Zaloguj się' desc='Bez obaw - nie jesteśmy kolejnym portalem ślędzącym Cię wszędzie. Podajesz tylko niezbędne dane a innym pokazujesz ile sama chcesz pokazać.' img={step1} />\r\n                <Step title='Opowiedz nam o swoich potrzebach' desc='Wypełnij krótką ankietę, żebyśmy łatwiej mogli dobrać idealną grupę dla Ciebie.' img={step2} />\r\n                <Step title='Znajdź swój krąg lub załóż nowy' desc='Na platformie znajdzie pomocne informacjie i wskazówki jak najlepiej do tego podejść.' img={step3} />\r\n                <Step title='Ciesz się wsparcie grupy my zajmiemy się resztą!'\r\n                    desc='Narzędzia, które oferuje Sisterly pomogą wam w organizacji spotkań, utrzymaniu dobrej atmosfery i motywacji.' img={step4} />\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default HowItWorksContainer;","\r\n\r\ninterface RecomendationCardProps {\r\n    userName: string;\r\n    hashtags: string[];\r\n    desc: string;\r\n    img: string;\r\n}\r\n\r\nconst RecomendationCard: React.FC<RecomendationCardProps> = (options: RecomendationCardProps) => {\r\n    let hashtagsElements: JSX.Element[] = [];\r\n    for (let i = 0; i < options.hashtags.length; i++) {\r\n        hashtagsElements.push(<h4># {options.hashtags[i]} </h4>);\r\n    }\r\n    return (\r\n\r\n        <div>\r\n            <img src={options.img} width='50%' />\r\n            <h4>{options.userName}</h4>\r\n            należy do kręgów:\r\n            {hashtagsElements}\r\n            {options.desc}\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default RecomendationCard;","export default __webpack_public_path__ + \"static/media/em_portret.42c0d78b.jpg\";","export default __webpack_public_path__ + \"static/media/MW_foto.c1be7824.jpg\";","export default __webpack_public_path__ + \"static/media/kasia.7f54f416.jpg\";","import React from \"react\";\r\nimport RecomendationCard from \"./RecomendationCard\";\r\nimport emportret from \"../images/em_portret.jpg\";\r\nimport mwportret from \"../images/MW_foto.jpg\";\r\nimport kmportret from \"../images/kasia.jpg\";\r\n\r\n\r\nconst RecomendationContainer = () => {\r\n\r\n    return (\r\n\r\n        <div>\r\n            <h1>Dlaczego warto tu być?</h1>\r\n            <div className='recomendation-card-container'>\r\n                <RecomendationCard img={mwportret} userName='Marysia' hashtags={['przebranżawianie', 'rozwój_osobisty']} desc='Jakiś czas temu zauważyłam, że mój świat zdominowany jest przez mężczyzn. Brakowało mi kobiecej perspektywy. Sisterly daje możliwość połączenia się z dziewczynami otwartymi na wymianę doświadczeń w przyjaznej atmosferze.' />\r\n                <RecomendationCard img={kmportret} userName='Kasia' hashtags={['doktoratpogodzinach', 'nieumiemwpaznokcie']} desc='Znalazłam krąg kobiet, które mnie rozumieją bez zbędnego tłumaczenia, dają mi energii do działania.W drugim kręgu, gdzie próbujemy ogarnąć bycie kobietą sukcesu, która nie umie zrobić sobie paznokci - spotkałam tam kobiety ze świetnym poczuciem humoru.'/>\r\n                <RecomendationCard img={emportret} userName='Ewelina' hashtags={['programowanie', 'kobietydokodu']} desc='Strona sisterly natchneła mnie do stworzenia małej grupki dziewczyn, która będzie wspólnie rozwijać wymyśloną przez nas aplikację. Strona zgrupowała mnie ze świetnymi dziewcznami i pomogła w zarządzaniu spotkaniami oraz zadaniami. ' />\r\n            </div>\r\n            <div className='circles'>\r\n                <div id=\"circle\" />\r\n                <div id=\"circle\" style={{ backgroundColor: '#5E548E' }} />\r\n                <div id=\"circle\" />\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default RecomendationContainer;","export default __webpack_public_path__ + \"static/media/plus-icon.376e9b6a.svg\";","import React from \"react\";\r\nimport RecomendationCard from \"./RecomendationCard\";\r\nimport emportret from \"../images/em_portret.jpg\";\r\nimport mwportret from \"../images/MW_foto.jpg\";\r\nimport kmportret from \"../images/kasia.jpg\";\r\nimport {Accordion, Card, Button, Form, Row, Col} from 'react-bootstrap';\r\nimport PlusIcon from \"../images/icons/plus-icon.svg\"\r\nimport StyledButton from \"./Button\";\r\nimport EmailForm from \"./EmailForm\";\r\n\r\nconst RecomendationContainer = () => {\r\n\r\n    return (\r\n\r\n        <div>\r\n            <h1>Najczęściej zadawane pytania</h1>\r\n\r\n\r\n            <Accordion defaultActiveKey=\"1\">\r\n                <Accordion.Toggle className=\"accordion-header\" eventKey=\"0\">\r\n                    Czym różni się Sisterly od grup tematycznych w socjal mediach?\r\n                    <img src={PlusIcon} className=\"accordionIcon\"/>\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body>W Sisterly skupiamy się konkretenie na budowaniu kręgów spotykających się regularnie\r\n                        online. Od nas dostajesz wsparcie i narzędzia do ich prowadzenia. Żadna z platform nie zapewnia\r\n                        konkretnie takiego rozwiązania. </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Accordion>\r\n\r\n            <Accordion defaultActiveKey=\"1\">\r\n                <Accordion.Toggle className=\"accordion-header\" eventKey=\"0\">\r\n                    Czy tematy grup są ograniczone tylko do rozwoju osobistego?\r\n                    <img src={PlusIcon} className=\"accordionIcon\"/>\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body>Nie! Tematy wymyślacie same, w zależności tego czego aktualnie porzebujecie, czy to\r\n                        motywacja w trakcie pisania doktoratu, rozmowy o podróżach, nauka lepienia pierogów czy\r\n                        programowania.</Card.Body>\r\n                </Accordion.Collapse>\r\n            </Accordion>\r\n\r\n            <Accordion defaultActiveKey=\"1\">\r\n                <Accordion.Toggle className=\"accordion-header\" eventKey=\"0\">\r\n                    Znalazłam swoją grupę i co dalej?\r\n                    <img src={PlusIcon} className=\"accordionIcon\"/>\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body>Po zawiązaniu kręgu ustalacie zasady i spotykacie sie regularnie online by czerpać z\r\n                        grupy wsparcie i motywację. Platforma prowadzi Was za rękę w zakresie technicznym i na każdym\r\n                        kroku daje wskazówki jak współdziałać skutecznie i serdecznie. </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Accordion>\r\n\r\n            <Accordion defaultActiveKey=\"1\">\r\n                <Accordion.Toggle className=\"accordion-header\" eventKey=\"0\">\r\n                    Czy korzystanie z platformy jest płatne?\r\n                    <img src={PlusIcon} className=\"accordionIcon\"/>\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body>Korzystanie z platformy jest darmowe. Dajemy jednak możliwość korzystania z płatnych\r\n                        narzędzi jeśli uznacie z grupą, że tego potrzebujecie. </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Accordion>\r\n\r\n            <div className=\"mt-3\">\r\n                Nie czekaj, siostrzana energia jest na wyciągnięcie ręki!\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default RecomendationContainer;","import AboutContainer from \"../Components/About\";\r\nimport LandingContainer from \"../Components/LandingContainer\";\r\nimport React from \"react\";\r\nimport HowItWorksContainer from \"../Components/HowItWorksContainer\";\r\nimport RecomendationContainer from \"../Components/RecomendationContainer\";\r\nimport CommonQuestionsContainer from \"../Components/CommonQuestionsContainer\";\r\n\r\n\r\nconst LandingPage = () => {\r\n    return (\r\n        <div>\r\n            <LandingContainer />\r\n\r\n            <section>\r\n                <AboutContainer />\r\n            </section>\r\n            <section>\r\n                <HowItWorksContainer />\r\n            </section>\r\n            <section>\r\n                <RecomendationContainer />\r\n            </section>\r\n            <section>\r\n                <CommonQuestionsContainer />\r\n            </section>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default LandingPage;","import logo from './logo.svg';\r\nimport { Counter } from '../features/counter/Counter';\r\nimport '../styles/allstyles.scss';\r\nimport { Button } from 'react-bootstrap';\r\nimport LoginForm from './LoginForm';\r\nimport React from 'react';\r\n//import { BrowserRouter as Router, Switch, Route, Link, useRouteMatch, useParams } from \"react-router-dom\";\r\nimport RegistrationForm from './RegistrationForm';\r\nimport GroupsView from './GroupsView';\r\nimport AddGroup from \"./AddGroup\";\r\nimport NavigationBar from '../Components/NavigationBar';\r\nimport MentorRegistration from './MentorRegistration';\r\nimport LandingPage from './LandingPage';\r\nimport MyTools from \"./MyTools\";\r\nimport { isUserLoggedIn, userName } from \"../features/usersession/userSessionSlice\"\r\nimport { useAppSelector, } from '../app/hooks';\r\nimport Mentors from './Mentors';\r\nimport createHistory from 'history/createBrowserHistory'\r\nimport { Route, Router } from 'react-router';\r\n\r\nexport default function App() {\r\n\r\n    const isLoggedIn = useAppSelector(isUserLoggedIn);\r\n    const username = useAppSelector(userName);\r\n    return (\r\n        <Router history={createHistory()}>\r\n            <NavigationBar isLoggedIn={isLoggedIn} />\r\n            <Route path={process.env.PUBLIC_URL + '/'} component={LandingPage}>\r\n            </Route>\r\n            <Route path={process.env.PUBLIC_URL + '/signup'} component={RegistrationForm}>\r\n            </Route>\r\n            <Route path='*' component={MentorRegistration} />\r\n        </Router>\r\n    );\r\n    // <Router>\r\n    //     <NavigationBar isLoggedIn={isLoggedIn} />\r\n    //     <Switch>\r\n    //         <Route path=\"/singin\">\r\n    //             <LoginForm />\r\n    //         </Route>\r\n    //         <Route path={process.env.PUBLIC_URL + '/signup'}>\r\n    //             <RegistrationForm />\r\n    //         </Route>\r\n    //         <Route path=\"/mentor_registration\">\r\n    //             <MentorRegistration />\r\n    //         </Route>\r\n    //         <Route path=\"/addGroup\">\r\n    //             <AddGroup />\r\n    //         </Route>\r\n    //         <Route exact path=\"/myTools\" component={MyTools}>\r\n    //         </Route>\r\n    //         <Route path=\"/mentors\">\r\n    //             <Mentors />\r\n    //         </Route>\r\n    //         <Route path={process.env.PUBLIC_URL + '/'}>\r\n    //             {isLoggedIn && <GroupsView groupsType='example' />}\r\n    //             {!isLoggedIn && <LandingPage />}\r\n\r\n    //         </Route>\r\n\r\n    //     </Switch>\r\n    //     <div className=\"main-footer\">\r\n    //         <span className=\"main-contact\">Kontakt</span>\r\n\r\n    //         <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"main-footer-icon-facebook\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#FFF\">\r\n    //             <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n    //             <path\r\n    //                 d=\"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H4V8l8 5 8-5v10zm-8-7L4 6h16l-8 5z\" />\r\n    //         </svg>\r\n    //         <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"main-footer-icon-mail\" enable-background=\"new 0 0 24 24\" height=\"24px\"\r\n    //             viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#FFF\">\r\n    //             <rect fill=\"none\" height=\"24\" width=\"24\" />\r\n    //             <path\r\n    //                 d=\"M22,12c0-5.52-4.48-10-10-10S2,6.48,2,12c0,4.84,3.44,8.87,8,9.8V15H8v-3h2V9.5C10,7.57,11.57,6,13.5,6H16v3h-2 c-0.55,0-1,0.45-1,1v2h3v3h-3v6.95C18.05,21.45,22,17.19,22,12z\" />\r\n    //         </svg>\r\n\r\n    //     </div>\r\n    // </Router>\r\n\r\n}\r\n\r\n\r\n// function Topics() {\r\n//   let match = useRouteMatch();\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Grupy</h2>\r\n\r\n//       <ul>\r\n//         <li>\r\n//           <Link to={`${match.url}/IT`}>Grupy ze świata IT</Link>\r\n//         </li>\r\n//         <li>\r\n//           <Link to={`${match.url}/Psychology`}>Grupy ze świata psychologii</Link>\r\n//         </li>\r\n//       </ul>\r\n\r\n//       {/* The Topics page has its own <Switch> with more routes\r\n//           that build on the /topics URL path. You can think of the\r\n//           2nd <Route> here as an \"index\" page for all topics, or\r\n//           the page that is shown when no topic is selected */}\r\n//       <Switch>\r\n//         <Route path={`${match.path}/:topicId`}>\r\n//           {/* <GroupsView groupsType={topicId}/> jakos przekazac*/}\r\n//           <GroupsView groupsType='IT' />\r\n//         </Route>\r\n//         <Route path={match.path}>\r\n//           {/* <GroupsView groupsType='IT' /> */}\r\n//         </Route>\r\n//       </Switch>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise<{ data: number }>((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport { fetchCount } from './counterAPI';\n\nexport interface CounterState {\n  value: number;\n  status: 'idle' | 'loading' | 'failed';\n}\n\nconst initialState: CounterState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount: number) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state: RootState) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount: number): AppThunk => (\n  dispatch,\n  getState\n) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\nimport userSessionSlice from '../features/usersession/userSessionSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n    userSession: userSessionSlice,\r\n  },\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Pages/App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/Button.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}