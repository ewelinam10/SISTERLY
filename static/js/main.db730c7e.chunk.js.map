{"version":3,"sources":["app/hooks.ts","features/usersession/userSessionSlice.ts","Pages/LoginForm.tsx","Components/Button.tsx","Pages/RegistrationForm.tsx","Pages/GroupsView.tsx","images/icons/avatar.svg","Components/groups/QuestionSection.tsx","Components/groups/QuestionSummary.tsx","Pages/AddGroup.tsx","images/logo.svg","Components/NavigationBar.tsx","Pages/MentorRegistration.tsx","images/hearticon.svg","Components/About.tsx","images/main_image.jpeg","Components/EmailForm.tsx","Components/LandingContainer.tsx","Components/Step.tsx","images/step_1.svg","images/step_2.svg","images/step_3.svg","images/step_4.svg","Components/HowItWorksContainer.tsx","Components/RecomendationCard.tsx","images/em_portret.jpg","images/MW_foto.jpg","images/kasia.jpg","Components/RecomendationContainer.tsx","images/icons/plus-icon.svg","Components/CommonQuestionsContainer.tsx","Pages/LandingPage.tsx","images/sticky_note.jpg","Components/tools/StickyNote.tsx","images/icons/videocam_off_black_24dp.svg","images/icons/mic_off_black_24dp.svg","images/icons/chat_black_24dp.svg","images/icons/OnlineIcon.png","Pages/MyTools.tsx","Pages/Mentors.tsx","Pages/App.tsx","features/counter/counterAPI.ts","features/counter/counterSlice.ts","app/store.ts","serviceWorker.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","initialState","isLogged","localStorage","getItem","username","userSessionSlice","createSlice","name","reducers","logout","state","setItem","login","action","payload","actions","isUserLoggedIn","userSession","userName","LoginForm","history","useHistory","dispatch","Form","onSubmit","event","form","currentTarget","preventDefault","checkValidity","stopPropagation","formData","FormData","target","formDataObj","Object","fromEntries","entries","push","Group","controlId","Label","Control","type","placeholder","Button","variant","fadeIn","keyframes","color","StyledButton","styled","RegistrationForm","useState","validated","setValidated","noValidate","Row","as","Col","md","required","defaultValue","Feedback","InputGroup","hasValidation","Prepend","Text","id","aria-describedby","Check","label","feedback","groupsMock","description","numberOfTasks","hash1","hash2","hash3","GroupsView","linkToExampleOfGroups","i","className","map","group","Card","Body","toString","join","Title","width","height","viewBox","fill","xmlns","d","React","Component","QuestionSection","question","addAnswer","index","questionCount","answer","setAnswer","clearAnswer","src","Avatar","value","onChange","e","onClick","QuestionSummary","questions","answers","attrList","hashList","setHashList","hashtag","setHashtag","element","renderSummary","attr","hash","disabled","onKeyPress","key","hashtagArr","Array","from","unshift","addHashtag","Navbar","Brand","href","AddGroup","questionCounter","setQuestionCounter","answerList","setAnswerList","document","getElementsByClassName","style","animation","setTimeout","questionList","length","NavigationBar","options","navLinks","isLoggedIn","onLogoutClick","Nav","Link","NavDropdown","title","Item","Divider","getNavDrop","getLinks4LoggedInUser","getMainLinks","sticky","expand","image","Toggle","aria-controls","Collapse","MentorRegistration","AboutContainer","heartImg","EmailElement","controlClass","xs","LandingContainer","EmailForm","Step","img","desc","HowItWorksContainer","step1","step2","step3","step4","RecomendationCard","hashtagsElements","hashtags","RecomendationContainer","mwportret","kmportret","emportret","backgroundColor","Accordion","defaultActiveKey","eventKey","PlusIcon","LandingPage","About","CommonQuestionsContainer","StickyNotes","note","noteOpend","setNoteOpend","openNote","StickyNote","MyTools","myNotes","setMyNotes","myNotesGroup","setMyNotesGroup","counter","setCounter","formatedCounter","setFormatedCounter","messageInput","setMessageInput","useEffect","timer","time","hours","Math","floor","minutes","seconds","formatSeconds","clearTimeout","nextNote","Camera","Mic","OnlineTable","Chat","bounds","StickyNoteImg","Mentors","App","exact","path","component","groupsType","enable-background","fetchCount","amount","Promise","resolve","data","incrementAsync","createAsyncThunk","a","response","counterSlice","status","increment","decrement","incrementByAmount","extraReducers","builder","addCase","pending","fulfilled","store","configureStore","reducer","counterReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.db730c7e.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../../app/store';\r\n\r\nexport interface UserSessionState {\r\n  isLogged: boolean;\r\n  username: string;\r\n}\r\n\r\nconst initialState: UserSessionState = {\r\n  isLogged: localStorage.getItem('isLogged') == 'true' ? true : false,\r\n  username: localStorage.getItem('username') ?? ''\r\n}\r\n\r\nexport const userSessionSlice = createSlice({\r\n  name: 'userSession',\r\n  initialState,\r\n  reducers: {\r\n    logout: (state) => {\r\n      localStorage.setItem('isLogged','false');\r\n      localStorage.setItem('username','');\r\n      state.isLogged = false;\r\n      state.username = \"\";\r\n    },\r\n    login: (state, action: PayloadAction<string>) => {\r\n      localStorage.setItem('isLogged','true');\r\n      localStorage.setItem('username',action.payload);\r\n      state.isLogged = true\r\n      state.username = action.payload\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSessionSlice.actions;\r\n\r\nexport const isUserLoggedIn = (state: RootState) => state.userSession.isLogged;\r\n\r\nexport const userName = (state: RootState) => state.userSession.username;\r\n\r\nexport default userSessionSlice.reducer;\r\n","import {Form, Button} from 'react-bootstrap';\r\n\r\nimport { useAppDispatch } from '../app/hooks';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { login } from \"../features/usersession/userSessionSlice\";\r\n\r\nfunction LoginForm() {\r\n    const history = useHistory();\r\n    const dispatch = useAppDispatch();\r\n\r\n    const handleSubmit = (event) => {\r\n        const form = event.currentTarget;\r\n        event.preventDefault();\r\n\r\n        if (form.checkValidity() === false) {\r\n          event.stopPropagation();\r\n        }\r\n\r\n        const formData = new FormData(event.target);\r\n        const formDataObj = Object.fromEntries(formData.entries())\r\n        dispatch(login(formDataObj.username as string));\r\n        history.push('/');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control name=\"username\" type=\"email\" placeholder=\"example@gmail.com\"/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Hasło</Form.Label>\r\n                    <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\"/>\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Zaloguj\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginForm;","import React from \"react\";\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Button } from 'react-bootstrap';\r\nconst fadeIn = keyframes`\r\n  0% {\r\n    opacity: 20%;\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n  }\r\n`\r\nconst color = '#FF5E78'; // nie wiem jak zaimportowac ze styli base-pink\r\n\r\nconst StyledButton = styled(Button)`\r\nanimation: 3s ${fadeIn} ease-out;\r\ntext-align: center;\r\ntext-decoration: none;\r\nbackground-color: ${color};\r\nborder: 2px solid $color;\r\ndisplay: inline-block;\r\nfont-size :1rem;\r\nborder-radius: 0.3em;\r\nborder-color: ${color};\r\ntransition: all 0.2s ease-in-out;\r\nposition: relative;\r\noverflow: hidden;\r\n&:before {\r\n  content: \"\";\r\n  background-color: rgba(255,255,255,0.5);\r\n  height: 100%;\r\n  width: 3em;\r\n  display: block;\r\n  position: absolute;\r\n  top: 0;\r\n  left: -4.5em;\r\n  transform: skewX(-45deg) translateX(0);\r\n  transition: none;\r\n}\r\n&:hover {\r\n  background-color: $color !important;\r\n  color: #fff;\r\n  border-color: ${color};\r\n  &:before {\r\n    transform: skewX(-45deg) translateX(13.5em);\r\n   transition: all 0.5s ease-in-out;\r\n  }\r\n}\r\n`;\r\n\r\nexport default StyledButton;","import React, {useState} from 'react';\r\nimport {Form, Button, Col, InputGroup} from 'react-bootstrap';\r\nimport StyledButton from '../Components/Button';\r\nimport '../styles/Button.scss'\r\n\r\nfunction RegistrationForm() {\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    const handleSubmit = (event) => {\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        setValidated(true);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} md=\"4\" controlId=\"validationCustom01\">\r\n                        <Form.Label>First name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type=\"text\"\r\n                            placeholder=\"First name\"\r\n                            defaultValue=\"Mark\"\r\n                        />\r\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\r\n                        <Form.Label>Last name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type=\"text\"\r\n                            placeholder=\"Last name\"\r\n                            defaultValue=\"Otto\"\r\n                        />\r\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md=\"4\" controlId=\"validationCustomUsername\">\r\n                        <Form.Label>Username</Form.Label>\r\n                        <InputGroup hasValidation>\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Username\"\r\n                                aria-describedby=\"inputGroupPrepend\"\r\n                                required\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please choose a username.\r\n                            </Form.Control.Feedback>\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} md=\"6\" controlId=\"validationCustom03\">\r\n                        <Form.Label>City</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"City\" required/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a valid city.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md=\"3\" controlId=\"validationCustom04\">\r\n                        <Form.Label>State</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"State\" required/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a valid state.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\r\n                        <Form.Label>Zip</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Zip\" required/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a valid zip.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Group>\r\n                    <Form.Check\r\n                        required\r\n                        label=\"Agree to terms and conditions\"\r\n                        feedback=\"You must agree before submitting.\"\r\n                    />\r\n                </Form.Group>\r\n                <StyledButton type=\"submit\">Zarejestruj się</StyledButton>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default RegistrationForm;\r\n\r\n","import { Card, Button } from 'react-bootstrap';\r\nimport React from \"react\";\r\ninterface GroupOptions {\r\n    name: string;\r\n    description: string;\r\n    numberOfTasks: number;\r\n    hash1: string;\r\n    hash2: string;\r\n    hash3: string;\r\n}\r\nconst groupsMock = [\r\n    {\r\n        name: 'ASERTYWNOŚĆ',\r\n        description: 'Grupa ćwicząca asertywność poprzez odgrywanie scenek z życia uczestników',\r\n        numberOfTasks: '2',\r\n        hash1: '#asertywnosc',\r\n        hash2: '#samodoskonalenie',\r\n        hash3: '',\r\n    },\r\n    {\r\n        name: 'OGRODNICTWO',\r\n        description: 'Wspólne rozpoczęcie hodowli warzyw i owoców na balkonie, rośliny wybierzemy na spotkaniu',\r\n        numberOfTasks: '4',\r\n        hash1: '#ogrodnictwo',\r\n        hash2: '#naswiezympowietrzu'\r\n    },\r\n    {\r\n        name: 'PRZEBRANŻUJ SIĘ!',\r\n        description: 'Gromadzimy dziewczyny szukające nowej pracy w odmiennej od dotychczasowej branży, pomagamy sobie ze stresem i problemami',\r\n        numberOfTasks: '3',\r\n        hash1: '#praca',\r\n        hash2: '#branza',\r\n        hash3: '#zmiany',\r\n    },\r\n    {\r\n        name: 'PROGRAMOWANIE',\r\n        description: 'Dołącz do zespołu i twórz razem z nami aplikację na Androida!',\r\n        numberOfTasks: '3',\r\n        hash1: '#codegirls',\r\n        hash2: '#programming',\r\n        hash3: '#android',\r\n    },\r\n    {\r\n        name: 'NAUKA',\r\n        description: 'Podziel się z nami swoimi sposobami na naukę!',\r\n        numberOfTasks: '3',\r\n        hash1: '#praca',\r\n        hash2: '#branza',\r\n        hash3: '#zmiany',\r\n    },\r\n    {\r\n        name: 'DOKTORAT',\r\n        description: 'Jeśli piszesz doktorat i potrzebujesz wsparcia od innych doktorantek, zapraszamy!',\r\n        numberOfTasks: '5',\r\n        hash1: '#praca',\r\n        hash2: '#doktorat',\r\n        hash3: '#wsparcie',\r\n    },\r\n    {\r\n        name: 'PREZENTUJEMY',\r\n        description: 'Poćwicz z nami prezentacje przed publicznością. Pokonaj tremę i naucz się jasno wyrażać myśli.',\r\n        numberOfTasks: '2',\r\n        hash1: '#prezentacja',\r\n        hash2: '#samodoskonalenie',\r\n        hash3: '',\r\n    }\r\n]\r\ntype GroupsViewProps = {\r\n    groupsType: string // pozniej enum\r\n}\r\nclass GroupsView extends React.Component<GroupsViewProps> {\r\n    private linkToExampleOfGroups: string = 'https://gist.githubusercontent.com/ewelinam10/f1c304f6a2c21a311af97f92f2483967/raw/c2573affe9384ca64182388e7b0cf6adeec5666d/gistfile1.txt';\r\n    // public state: GroupsViewState = {\r\n    //     groups: Array() as GroupOptions[]\r\n    // }\r\n    // constructor(props: GroupsViewProps) {\r\n    //     super(props);\r\n    //     fetch(this.groupsMock)\r\n    //         .then(res => res.json())\r\n    //         .then((data) => {\r\n    //             this.setState({ groups: data.groups })\r\n    //         })\r\n    //         .catch(console.log)\r\n    // }\r\n    render() {\r\n        let i = 0;\r\n        return (\r\n            <div className='contain'>\r\n                {\r\n\r\n                    groupsMock.map((group) => {\r\n                        i++;\r\n                        return (\r\n                            <Card className=\"tile\">\r\n                                <Card.Body>\r\n                                    <div className={['img', i.toString()].join(' ')} />\r\n                                    <Card.Title className=\"title\">{group.name}</Card.Title>\r\n                                    <div className=\"hashtags\">\r\n                                        <div className=\"hash1\">{group.hash1}</div>\r\n                                        <div className=\"hash2\">{group.hash2}</div>\r\n                                        <div className=\"hash3\">{group.hash3}</div>\r\n                                    </div>\r\n                                    <svg width=\"121\" height=\"25\" viewBox=\"0 0 121 25\" fill=\"none\"\r\n                                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                                        <path\r\n                                            d=\"M12.4998 6.25008C13.6457 6.25008 14.5832 7.18758 14.5832 8.33342C14.5832 9.47925 13.6457 10.4167 12.4998 10.4167C11.354 10.4167 10.4165 9.47925 10.4165 8.33342C10.4165 7.18758 11.354 6.25008 12.4998 6.25008ZM12.4998 16.6667C15.3123 16.6667 18.5415 18.0105 18.7498 18.7501H6.24984C6.48942 18.0001 9.69775 16.6667 12.4998 16.6667ZM12.4998 4.16675C10.1978 4.16675 8.33317 6.03133 8.33317 8.33342C8.33317 10.6355 10.1978 12.5001 12.4998 12.5001C14.8019 12.5001 16.6665 10.6355 16.6665 8.33342C16.6665 6.03133 14.8019 4.16675 12.4998 4.16675ZM12.4998 14.5834C9.71859 14.5834 4.1665 15.9792 4.1665 18.7501V20.8334H20.8332V18.7501C20.8332 15.9792 15.2811 14.5834 12.4998 14.5834Z\"\r\n                                            fill=\"#5E548E\" />\r\n                                        <path\r\n                                            d=\"M36.4998 6.25008C37.6457 6.25008 38.5832 7.18758 38.5832 8.33342C38.5832 9.47925 37.6457 10.4167 36.4998 10.4167C35.354 10.4167 34.4165 9.47925 34.4165 8.33342C34.4165 7.18758 35.354 6.25008 36.4998 6.25008ZM36.4998 16.6667C39.3123 16.6667 42.5415 18.0105 42.7498 18.7501H30.2498C30.4894 18.0001 33.6978 16.6667 36.4998 16.6667ZM36.4998 4.16675C34.1978 4.16675 32.3332 6.03133 32.3332 8.33342C32.3332 10.6355 34.1978 12.5001 36.4998 12.5001C38.8019 12.5001 40.6665 10.6355 40.6665 8.33342C40.6665 6.03133 38.8019 4.16675 36.4998 4.16675ZM36.4998 14.5834C33.7186 14.5834 28.1665 15.9792 28.1665 18.7501V20.8334H44.8332V18.7501C44.8332 15.9792 39.2811 14.5834 36.4998 14.5834Z\"\r\n                                            fill=\"#5E548E\" />\r\n                                        <path\r\n                                            d=\"M60.4998 6.25008C61.6457 6.25008 62.5832 7.18758 62.5832 8.33342C62.5832 9.47925 61.6457 10.4167 60.4998 10.4167C59.354 10.4167 58.4165 9.47925 58.4165 8.33342C58.4165 7.18758 59.354 6.25008 60.4998 6.25008ZM60.4998 16.6667C63.3123 16.6667 66.5415 18.0105 66.7498 18.7501H54.2498C54.4894 18.0001 57.6978 16.6667 60.4998 16.6667ZM60.4998 4.16675C58.1978 4.16675 56.3332 6.03133 56.3332 8.33342C56.3332 10.6355 58.1978 12.5001 60.4998 12.5001C62.8019 12.5001 64.6665 10.6355 64.6665 8.33342C64.6665 6.03133 62.8019 4.16675 60.4998 4.16675ZM60.4998 14.5834C57.7186 14.5834 52.1665 15.9792 52.1665 18.7501V20.8334H68.8332V18.7501C68.8332 15.9792 63.2811 14.5834 60.4998 14.5834Z\"\r\n                                            fill=\"#5E548E\" />\r\n                                        <path\r\n                                            d=\"M84.4998 6.25008C85.6457 6.25008 86.5832 7.18758 86.5832 8.33342C86.5832 9.47925 85.6457 10.4167 84.4998 10.4167C83.354 10.4167 82.4165 9.47925 82.4165 8.33342C82.4165 7.18758 83.354 6.25008 84.4998 6.25008ZM84.4998 16.6667C87.3123 16.6667 90.5415 18.0105 90.7498 18.7501H78.2498C78.4894 18.0001 81.6978 16.6667 84.4998 16.6667ZM84.4998 4.16675C82.1978 4.16675 80.3332 6.03133 80.3332 8.33342C80.3332 10.6355 82.1978 12.5001 84.4998 12.5001C86.8019 12.5001 88.6665 10.6355 88.6665 8.33342C88.6665 6.03133 86.8019 4.16675 84.4998 4.16675ZM84.4998 14.5834C81.7186 14.5834 76.1665 15.9792 76.1665 18.7501V20.8334H92.8332V18.7501C92.8332 15.9792 87.2811 14.5834 84.4998 14.5834Z\"\r\n                                            fill=\"#1DBA82\" />\r\n                                        <path\r\n                                            d=\"M108.5 6.25008C109.646 6.25008 110.583 7.18758 110.583 8.33342C110.583 9.47925 109.646 10.4167 108.5 10.4167C107.354 10.4167 106.417 9.47925 106.417 8.33342C106.417 7.18758 107.354 6.25008 108.5 6.25008ZM108.5 16.6667C111.312 16.6667 114.542 18.0105 114.75 18.7501H102.25C102.489 18.0001 105.698 16.6667 108.5 16.6667ZM108.5 4.16675C106.198 4.16675 104.333 6.03133 104.333 8.33342C104.333 10.6355 106.198 12.5001 108.5 12.5001C110.802 12.5001 112.667 10.6355 112.667 8.33342C112.667 6.03133 110.802 4.16675 108.5 4.16675ZM108.5 14.5834C105.719 14.5834 100.167 15.9792 100.167 18.7501V20.8334H116.833V18.7501C116.833 15.9792 111.281 14.5834 108.5 14.5834Z\"\r\n                                            fill=\"#1DBA82\" />\r\n                                    </svg>\r\n                                    <div className=\"wrap\">\r\n                                        <Card.Text className=\"description\">\r\n                                            {group.description}\r\n                                            <Button variant=\"primary\" className='btn'>Dołącz do\r\n                                                grupy</Button></Card.Text></div>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        )\r\n                    })}\r\n            </div>\r\n        )\r\n    }\r\n};\r\nexport default GroupsView;","export default __webpack_public_path__ + \"static/media/avatar.ae5007be.svg\";","import React, {useState} from 'react';\r\nimport Avatar from '../../images/icons/avatar.svg'\r\nimport { Button, Card, FormText } from 'react-bootstrap';\r\n\r\nconst QuestionSection = ({question, addAnswer, index, questionCount}) => {\r\n\r\n    const [answer, setAnswer] = useState('');\r\n\r\n    const handleChangeAnswer = (e) => {\r\n        setAnswer(e.target.value)\r\n    }\r\n\r\n    const clearAnswer = () => {\r\n        setAnswer('');\r\n    }\r\n\r\n    return (\r\n     <div>\r\n         <div className=\"groups-question-card\">\r\n             <div>\r\n                 <img className='groups-question-avatar' src={Avatar}/>\r\n             </div>\r\n             <div className=\"groups-question-question\">Krok {index} z {questionCount}</div>\r\n             <div className=\"groups-question-question\">{question}</div>\r\n             <textarea className=\"form-control\" value={answer} onChange={handleChangeAnswer}/>\r\n             <div className=\"mt-2 buttonWrapper\">\r\n                 <Button className=\"groups-question-btn-prev\" onClick={() => {addAnswer(answer); clearAnswer()}}>Poprzednie</Button>\r\n                 <Button className=\"groups-question-btn-next offset-6\" onClick={() => {addAnswer(answer); clearAnswer()}}>Następne</Button>\r\n             </div>\r\n         </div>\r\n     </div>\r\n    )\r\n}\r\n\r\nexport default QuestionSection;","import React, {useState} from 'react';\r\nimport Avatar from '../../images/icons/avatar.svg'\r\nimport {Button, Card, FormText, Navbar} from 'react-bootstrap';\r\nimport Logo from \"../../images/logo.svg\";\r\n\r\nconst QuestionSummary = ({questions, answers}) => {\r\n\r\n    const attrListMock = [\r\n        \"Płec\",  \"Kraj zamieszkania\", \"Przedział wiekowy\", \"Czas trwania spotkania\", \"Częstotliwość spotkań\",\r\n    ]\r\n\r\n    const hashListMock = [\r\n        \"#samorozwoj\",  \"#feminizm\", \"#asertywnosc\", \"#praca\",\r\n    ]\r\n\r\n    const [attrList, setAttrList] = useState(attrListMock);\r\n    const [hashList, setHashList] = useState(hashListMock);\r\n    const [hashtag, setHashtag] = useState('');\r\n\r\n    const handleChangeHashtag = (e) => {\r\n        setHashtag(e.target.value)\r\n    }\r\n\r\n    const addHashtag = () => {\r\n        const hashtagArr = Array.from(hashtag);\r\n\r\n        if(hashtagArr[0] !== '#'){\r\n            hashtagArr.unshift('#');\r\n        }\r\n        setHashList([...hashList, hashtagArr.join('')]);\r\n        setHashtag('');\r\n    }\r\n\r\n    const renderSummary = (index) => {\r\n            return (\r\n                <div>\r\n                    <div className=\"font-weight-bold text-center\">{questions[index]}</div>\r\n                    <div>{answers[index]}</div>\r\n                </div>\r\n            )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"groups-question-card\">\r\n                <div>\r\n                    <img className='groups-question-avatar' src={Avatar}/>\r\n                </div>\r\n                <div className=\"groups-question-question\">Podsumowanie</div>\r\n                {\r\n                    questions.map((element,index) => (\r\n                        renderSummary(index)\r\n                    ))\r\n                }\r\n                <div className=\"font-weight-bold text-center\">\r\n                    W dobraniu jak najlepszych członków do kręgu może pomóc:\r\n                </div>\r\n\r\n                <div className=\"d-flex flex-wrap\">\r\n                    {attrList.map(attr => (\r\n                        <div className='question-summary-attr'>{attr}</div>\r\n                    ))}\r\n                </div>\r\n\r\n                <div className=\"font-weight-bold text-center mt-2\">\r\n                    Sugerowane hasztagi, wybierz z listy lub dodaj swój własny:\r\n                </div>\r\n\r\n                <div className=\" d-flex flex-wrap\">\r\n                    {hashList.map(hash => (\r\n                        <button disabled={true} className=\"question-summary-attr\">{hash}</button>\r\n                    ))}\r\n                    <input value={hashtag} onChange={handleChangeHashtag} className=\"question-summary-attr\" onKeyPress={event => {\r\n                        if (event.key === 'Enter') {\r\n                            addHashtag()\r\n                        }\r\n                    }}/>\r\n                </div>\r\n                <div className=\"mt-2 offset-4\">\r\n                    <Navbar.Brand href=\"/\">\r\n                        {/*informacja o zatwierdzeniu (np. modal)*/}\r\n                        <button className=\"btn btn-success groups-question-btn-next\">Zatwierdz</button>\r\n                    </Navbar.Brand>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuestionSummary;","import React, { useState } from 'react';\r\nimport QuestionSection from \"../Components/groups/QuestionSection\";\r\nimport QuestionSummary from \"../Components/groups/QuestionSummary\";\r\n\r\nconst AddGroup = () => {\r\n\r\n    const [questionCounter, setQuestionCounter] = useState(0);\r\n    const [answerList, setAnswerList] = useState<string[]>([]);\r\n\r\n\r\n    const addAnswer = (answer) => {\r\n\r\n\r\n        // @ts-ignore\r\n        document.getElementsByClassName('groups-question-card')[0].style.animation = \"mymove 1s ease-in-out\";\r\n\r\n        setTimeout(() => {\r\n            setQuestionCounter(questionCounter + 1);\r\n            setAnswerList([...answerList, answer]);\r\n\r\n            // @ts-ignore\r\n            document.getElementsByClassName('groups-question-card')[0].style.animation = \"\";\r\n        }, 1000)\r\n\r\n    }\r\n\r\n    const questionList = [\r\n        \"Twój cel lub temat\",\r\n        \"Jakich osób szukasz w kręgu\",\r\n        \"Czego chcesz się nauczyć lub doświadczyć w kręgu\",\r\n        \"Co wniesiesz do kręgu w tym temacie (wiedza/doświadczenie)\",\r\n    ]\r\n\r\n\r\n    const showQuestion = () => {\r\n        if (questionCounter === questionList.length) {\r\n            return (<QuestionSummary answers={answerList} questions={questionList}/>)\r\n            ///wyswietl podsumowanie formularza czy cos takiego\r\n        } else {\r\n            return <QuestionSection question={questionList[questionCounter]} addAnswer={addAnswer} index={questionCounter+1} questionCount={questionList.length}/>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n            {showQuestion()}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default AddGroup;","export default __webpack_public_path__ + \"static/media/logo.1709ba9f.svg\";","\r\nimport { Navbar, Nav, FormControl, Form, NavDropdown, Button, NavLink } from 'react-bootstrap';\r\nimport image from '../images/logo.svg'\r\nimport { useAppDispatch } from '../app/hooks';\r\nimport { logout } from \"../features/usersession/userSessionSlice\";\r\n\r\n\r\ninterface NavigationBarProps {\r\n    isLoggedIn: boolean;\r\n}\r\n\r\nconst NavigationBar: React.FC<NavigationBarProps> = (options: NavigationBarProps) => {\r\n    const dispatch = useAppDispatch();\r\n    const onLogoutClick = () => {\r\n        dispatch(logout());\r\n    };\r\n    let navLinks: JSX.Element[] = options.isLoggedIn ? getLinks4LoggedInUser(onLogoutClick) : getMainLinks();\r\n    return (\r\n        <Navbar sticky=\"top\" expand=\"lg\">\r\n            <Navbar.Brand href=\"/\">\r\n                <img width='45%' src={image} />\r\n\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse className=\"justify-content-end\" id=\" basic-navbar-nav\">\r\n                <Nav>\r\n                    {navLinks}\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar >\r\n    );\r\n}\r\n\r\nfunction getLinks4LoggedInUser(onLogoutClick: () => void): JSX.Element[] {\r\n    let navLinks: JSX.Element[] = [];\r\n    navLinks.push(<Nav.Link href=\"/addGroup\">ZAŁÓŻ KRĄG</Nav.Link>);\r\n    navLinks.push(<Nav.Link href=\"/myTools\">WIDOK SPOTKANIA</Nav.Link>);\r\n    navLinks.push(<Nav.Link href=\"/mentors\">MENTORZY</Nav.Link>);\r\n    navLinks.push(<Nav.Link href=\"/knowhow\">BAZA WIEDZY</Nav.Link>);\r\n    navLinks.push(getNavDrop(onLogoutClick));\r\n\r\n    return navLinks;\r\n}\r\n\r\nfunction getNavDrop(onLogoutClick: () => void): JSX.Element {\r\n    return (<NavDropdown title='' id=\"nav-dropdown\">\r\n        <NavDropdown.Item href='/editprofile'>EDYTUJ PROFIL</NavDropdown.Item>\r\n        <NavDropdown.Item href='/rules'>KODEKS SISTERLY</NavDropdown.Item>\r\n        <NavDropdown.Divider />\r\n        <NavDropdown.Item onClick={onLogoutClick} href='/'>WYLOGUJ</NavDropdown.Item>\r\n    </NavDropdown>);\r\n}\r\n\r\n\r\n\r\nfunction getMainLinks(): JSX.Element[] {\r\n    let navLinks: JSX.Element[] = [];\r\n    navLinks.push(<Nav.Link href=\"/singin\">ZALOGUJ</Nav.Link>);\r\n    navLinks.push(<Nav.Link href=\"/singup\">ZAŁÓŻ KONTO</Nav.Link>);\r\n    navLinks.push(<Nav.Link href=\"/mentor_registration\">ZOSTAŃ MENTOREM</Nav.Link>);\r\n    return navLinks;\r\n}\r\n\r\nexport default NavigationBar;","import React from \"react\";\r\n\r\nfunction MentorRegistration() {\r\n    return (\r\n        <div>\r\n            Tu będzie formularz dla mentora ;)\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MentorRegistration;","export default __webpack_public_path__ + \"static/media/hearticon.82676ea2.svg\";","import heartImg from \"../images/hearticon.svg\"\r\n\r\nconst AboutContainer = () => {\r\n    return (\r\n        <div className='about-container'>\r\n            <h1>Czym jest Sisterly? </h1>\r\n            <h3>\r\n                Na platformie Sisterly pomagamy kobietom spotykać się on-line w małych (do 5 osób) grupach skupionych wokół ważnego dla Was tematu lub celu.\r\n\r\n                <br /><br />\r\n\r\n                Czegokolwiek aktualnie potrzebujecie: motywacji do realizacji projektu czy luźnej rozmowy o zainteresowaniach - jesteśmy dla Was, bo wiemy, że w KRĘGU SIŁA, W KRĘGU ROŚNIESZ\r\n                <img className='animate__backInDown' src={heartImg} />\r\n            </h3>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AboutContainer;","export default __webpack_public_path__ + \"static/media/main_image.5ca026ed.jpeg\";","import {Col, Form, Row} from \"react-bootstrap\";\r\nimport StyledButton from \"./Button\";\r\n\r\n\r\nconst EmailElement = () => {\r\n\r\n    return (\r\n        <Form>\r\n            <Form.Group as={Row} controlClass='emailform'>\r\n                <Col xs={7} className='emailForm'>\r\n                    <Form.Control type=\"email\" placeholder=\"example@gmail.com\"/>\r\n                </Col>\r\n                <StyledButton>DOŁĄCZ!</StyledButton>\r\n            </Form.Group>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default EmailElement;","import { Form, Button, Col, Row } from 'react-bootstrap';\r\nimport image from '../images/main_image.jpeg'\r\nimport StyledButton from './/Button'\r\nimport EmailForm from \"./EmailForm\";\r\n\r\nconst LandingContainer = () => {\r\n    return (\r\n        <div className='landing-container'>\r\n            <div>\r\n                <div className='welcome-text'>\r\n                    <h1>BB ZNAJDŹ WSPARCIE <br />W SIOSTRZANYM KRĘGU</h1>\r\n                    <span>\r\n                        Sisterly, to jedyne takie miejsce w sieci, oparte na życzliwości i siostrzanym wsparciu.\r\n                    </span>\r\n                </div>\r\n\r\n                <EmailForm />\r\n\r\n                {/*<Form>*/}\r\n                {/*    <Form.Group as={Row} controlClass='emailform'>*/}\r\n                {/*        <Col xs={7} className='emailForm'>*/}\r\n                {/*            <Form.Control type=\"email\" placeholder=\"example@gmail.com\"/>*/}\r\n                {/*        </Col>*/}\r\n                {/*        <StyledButton>DOŁĄCZ!</StyledButton>*/}\r\n                {/*    </Form.Group>*/}\r\n                {/*</Form>*/}\r\n            </div>\r\n\r\n            <div>\r\n                <img src={image} />\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default LandingContainer;","\r\n\r\ninterface StepProps {\r\n    img: string;\r\n    title: string;\r\n    desc: string;\r\n}\r\n\r\nconst Step: React.FC<StepProps> = (options: StepProps) => {\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div>\r\n                <img src={options.img} />\r\n            </div>\r\n            <div>\r\n                <h2> {options.title} </h2>\r\n                {options.desc}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Step;","export default __webpack_public_path__ + \"static/media/step_1.7f905426.svg\";","export default __webpack_public_path__ + \"static/media/step_2.14938917.svg\";","export default __webpack_public_path__ + \"static/media/step_3.976f709d.svg\";","export default __webpack_public_path__ + \"static/media/step_4.c933890f.svg\";","import React from \"react\";\r\nimport Step from \"./Step\";\r\nimport step1 from \"../images/step_1.svg\";\r\nimport step2 from \"../images/step_2.svg\";\r\nimport step3 from \"../images/step_3.svg\";\r\nimport step4 from \"../images/step_4.svg\";\r\n\r\n\r\nconst HowItWorksContainer = () => {\r\n\r\n    return (\r\n\r\n        <div>\r\n            <h1>Jak to działa?</h1>\r\n            <div className='steps_container'>\r\n                <Step title='Zaloguj się' desc='Bez obaw - nie jesteśmy kolejnym portalem ślędzącym Cię wszędzie. Podajesz tylko niezbędne dane a innym pokazujesz ile sama chcesz pokazać.' img={step1} />\r\n                <Step title='Opowiedz nam o swoich potrzebach' desc='Wypełnij krótką ankietę, żebyśmy łatwiej mogli dobrać idealną grupę dla Ciebie.' img={step2} />\r\n                <Step title='Znajdź swój krąg lub załóż nowy' desc='Na platformie znajdzie pomocne informacjie i wskazówki jak najlepiej do tego podejść.' img={step3} />\r\n                <Step title='Ciesz się wsparcie grupy my zajmiemy się resztą!'\r\n                    desc='Narzędzia, które oferuje Sisterly pomogą wam w organizacji spotkań, utrzymaniu dobrej atmosfery i motywacji.' img={step4} />\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default HowItWorksContainer;","\r\n\r\ninterface RecomendationCardProps {\r\n    userName: string;\r\n    hashtags: string[];\r\n    desc: string;\r\n    img: string;\r\n}\r\n\r\nconst RecomendationCard: React.FC<RecomendationCardProps> = (options: RecomendationCardProps) => {\r\n    let hashtagsElements: JSX.Element[] = [];\r\n    for (let i = 0; i < options.hashtags.length; i++) {\r\n        hashtagsElements.push(<h4># {options.hashtags[i]} </h4>);\r\n    }\r\n    return (\r\n\r\n        <div>\r\n            <img src={options.img} width='50%' />\r\n            <h4>{options.userName}</h4>\r\n            należy do kręgów:\r\n            {hashtagsElements}\r\n            {options.desc}\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default RecomendationCard;","export default __webpack_public_path__ + \"static/media/em_portret.42c0d78b.jpg\";","export default __webpack_public_path__ + \"static/media/MW_foto.c1be7824.jpg\";","export default __webpack_public_path__ + \"static/media/kasia.7f54f416.jpg\";","import React from \"react\";\r\nimport RecomendationCard from \"./RecomendationCard\";\r\nimport emportret from \"../images/em_portret.jpg\";\r\nimport mwportret from \"../images/MW_foto.jpg\";\r\nimport kmportret from \"../images/kasia.jpg\";\r\n\r\n\r\nconst RecomendationContainer = () => {\r\n\r\n    return (\r\n\r\n        <div>\r\n            <h1>Dlaczego warto tu być?</h1>\r\n            <div className='recomendation-card-container'>\r\n                <RecomendationCard img={mwportret} userName='Marysia' hashtags={['przebranżawianie', 'rozwój_osobisty']} desc='Jakiś czas temu zauważyłam, że mój świat zdominowany jest przez mężczyzn. Brakowało mi kobiecej perspektywy. Sisterly daje możliwość połączenia się z dziewczynami otwartymi na wymianę doświadczeń w przyjaznej atmosferze.' />\r\n                <RecomendationCard img={kmportret} userName='Kasia' hashtags={['doktoratpogodzinach', 'nieumiemwpaznokcie']} desc='Znalazłam krąg kobiet, które mnie rozumieją bez zbędnego tłumaczenia, dają mi energii do działania.W drugim kręgu, gdzie próbujemy ogarnąć bycie kobietą sukcesu, która nie umie zrobić sobie paznokci - spotkałam tam kobiety ze świetnym poczuciem humoru.'/>\r\n                <RecomendationCard img={emportret} userName='Ewelina' hashtags={['programowanie', 'kobietydokodu']} desc='Strona sisterly natchneła mnie do stworzenia małej grupki dziewczyn, która będzie wspólnie rozwijać wymyśloną przez nas aplikację. Strona zgrupowała mnie ze świetnymi dziewcznami i pomogła w zarządzaniu spotkaniami oraz zadaniami. ' />\r\n            </div>\r\n            <div className='circles'>\r\n                <div id=\"circle\" />\r\n                <div id=\"circle\" style={{ backgroundColor: '#5E548E' }} />\r\n                <div id=\"circle\" />\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default RecomendationContainer;","export default __webpack_public_path__ + \"static/media/plus-icon.376e9b6a.svg\";","import React from \"react\";\r\nimport RecomendationCard from \"./RecomendationCard\";\r\nimport emportret from \"../images/em_portret.jpg\";\r\nimport mwportret from \"../images/MW_foto.jpg\";\r\nimport kmportret from \"../images/kasia.jpg\";\r\nimport {Accordion, Card, Button, Form, Row, Col} from 'react-bootstrap';\r\nimport PlusIcon from \"../images/icons/plus-icon.svg\"\r\nimport StyledButton from \"./Button\";\r\nimport EmailForm from \"./EmailForm\";\r\n\r\nconst RecomendationContainer = () => {\r\n\r\n    return (\r\n\r\n        <div>\r\n            <h1>Najczęściej zadawane pytania</h1>\r\n\r\n\r\n            <Accordion defaultActiveKey=\"1\">\r\n                <Accordion.Toggle className=\"accordion-header\" eventKey=\"0\">\r\n                    Czym różni się Sisterly od grup tematycznych w socjal mediach?\r\n                    <img src={PlusIcon} className=\"accordionIcon\"/>\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body>W Sisterly skupiamy się konkretenie na budowaniu kręgów spotykających się regularnie\r\n                        online. Od nas dostajesz wsparcie i narzędzia do ich prowadzenia. Żadna z platform nie zapewnia\r\n                        konkretnie takiego rozwiązania. </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Accordion>\r\n\r\n            <Accordion defaultActiveKey=\"1\">\r\n                <Accordion.Toggle className=\"accordion-header\" eventKey=\"0\">\r\n                    Czy tematy grup są ograniczone tylko do rozwoju osobistego?\r\n                    <img src={PlusIcon} className=\"accordionIcon\"/>\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body>Nie! Tematy wymyślacie same, w zależności tego czego aktualnie porzebujecie, czy to\r\n                        motywacja w trakcie pisania doktoratu, rozmowy o podróżach, nauka lepienia pierogów czy\r\n                        programowania.</Card.Body>\r\n                </Accordion.Collapse>\r\n            </Accordion>\r\n\r\n            <Accordion defaultActiveKey=\"1\">\r\n                <Accordion.Toggle className=\"accordion-header\" eventKey=\"0\">\r\n                    Znalazłam swoją grupę i co dalej?\r\n                    <img src={PlusIcon} className=\"accordionIcon\"/>\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body>Po zawiązaniu kręgu ustalacie zasady i spotykacie sie regularnie online by czerpać z\r\n                        grupy wsparcie i motywację. Platforma prowadzi Was za rękę w zakresie technicznym i na każdym\r\n                        kroku daje wskazówki jak współdziałać skutecznie i serdecznie. </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Accordion>\r\n\r\n            <Accordion defaultActiveKey=\"1\">\r\n                <Accordion.Toggle className=\"accordion-header\" eventKey=\"0\">\r\n                    Czy korzystanie z platformy jest płatne?\r\n                    <img src={PlusIcon} className=\"accordionIcon\"/>\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body>Korzystanie z platformy jest darmowe. Dajemy jednak możliwość korzystania z płatnych\r\n                        narzędzi jeśli uznacie z grupą, że tego potrzebujecie. </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Accordion>\r\n\r\n            <div className=\"mt-3\">\r\n                Nie czekaj, siostrzana energia jest na wyciągnięcie ręki!\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default RecomendationContainer;","import AboutContainer from \"../Components/About\";\r\nimport LandingContainer from \"../Components/LandingContainer\";\r\nimport React from \"react\";\r\nimport HowItWorksContainer from \"../Components/HowItWorksContainer\";\r\nimport RecomendationContainer from \"../Components/RecomendationContainer\";\r\nimport CommonQuestionsContainer from \"../Components/CommonQuestionsContainer\";\r\n\r\n\r\nconst LandingPage = () => {\r\n    return (\r\n        <div>\r\n            <LandingContainer />\r\n\r\n            <section>\r\n                <AboutContainer />\r\n            </section>\r\n            <section>\r\n                <HowItWorksContainer />\r\n            </section>\r\n            <section>\r\n                <RecomendationContainer />\r\n            </section>\r\n            <section>\r\n                <CommonQuestionsContainer />\r\n            </section>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default LandingPage;","export default __webpack_public_path__ + \"static/media/sticky_note.0b1ba5d3.jpg\";","import StickyNote from \"../../images/sticky_note.jpg\"\r\nimport {useState} from \"react\";\r\n\r\nconst StickyNotes = ({note, index}) => {\r\n\r\n    const [noteOpend, setNoteOpend] = useState(false);\r\n\r\n    const openNote = () => {\r\n\r\n        setNoteOpend(!noteOpend);\r\n\r\n        // const element : any = document.getElementById(`sticky-note-opened-${index}`).style.visibility = \"visible\";\r\n        // element.style.visibility = true\r\n    }\r\n\r\n    return(\r\n\r\n        <div>\r\n\r\n            <div className=\"sticky-note-wrapper\">\r\n\r\n                <img className=\"sticky-note-image\" src={StickyNote} onClick={openNote}/>\r\n                <div className=\"sticky-note-name\">{note.name}</div>\r\n            </div>\r\n\r\n\r\n            <div className=\"sticky-note-opend\" id={`sticky-note-opened-${index}`} >\r\n\r\n                <img className=\"sticky-note-image-opend\" src={StickyNote} onClick={openNote}/>\r\n                <div className=\"sticky-note-name-opend\">{note.name}</div>\r\n                <div className=\"sticky-note-name-opend\">{note.description}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default StickyNotes;","export default __webpack_public_path__ + \"static/media/videocam_off_black_24dp.c4b50005.svg\";","export default __webpack_public_path__ + \"static/media/mic_off_black_24dp.198688a5.svg\";","export default __webpack_public_path__ + \"static/media/chat_black_24dp.3c12da91.svg\";","export default __webpack_public_path__ + \"static/media/OnlineIcon.02df1cc5.png\";","import Logo from \"../images/logo.svg\"\r\nimport Avatar from \"../images/icons/avatar.svg\"\r\nimport {useEffect, useState} from \"react\";\r\nimport StickyNote from \"../Components/tools/StickyNote\";\r\nimport Camera from \"../images/icons/videocam_off_black_24dp.svg\";\r\nimport Mic from \"../images/icons/mic_off_black_24dp.svg\"\r\nimport Chat from \"../images/icons/chat_black_24dp.svg\"\r\nimport Draggable, {DraggableCore} from 'react-draggable';\r\nimport StickyNoteImg from \"../images/sticky_note.jpg\"\r\nimport PlusIcon from \"../images/icons/plus-icon.svg\"\r\nimport {Navbar} from \"react-bootstrap\";\r\nimport OnlineTable from \"../images/icons/OnlineIcon.png\"\r\n\r\nconst MyTools = () => {\r\n\r\n    const stickyNotesMock = [\r\n        {\r\n            name: 'KASIA',\r\n            description: 'Opis notatki 1 test dlugosci notatki',\r\n        },\r\n        {\r\n            name: 'EWELINA',\r\n            description: 'Opis notatki 2',\r\n        },\r\n        {\r\n            name: 'MAGDA',\r\n            description: 'Opis notatki 3',\r\n        }\r\n    ]\r\n\r\n    const stickyNotesGroupMock = [\r\n        {\r\n            name: 'Notatka 1 test dlugiej nazwy',\r\n        },\r\n        {\r\n            name: 'Notatka 2',\r\n        },\r\n        {\r\n            name: 'Notatka 3',\r\n        }\r\n    ]\r\n\r\n\r\n    const [myNotes, setMyNotes] = useState(stickyNotesMock)\r\n    const [myNotesGroup, setMyNotesGroup] = useState(stickyNotesGroupMock)\r\n    const [counter, setCounter] = useState(3600)\r\n    const [formatedCounter, setFormatedCounter] = useState(\"\")\r\n    const [messageInput, setMessageInput] = useState('')\r\n\r\n    const formatSeconds = (time) => {\r\n        let hours = Math.floor(time / 3600);\r\n        let minutes = Math.floor((time - 3600 * hours) / 60);//(time / 60)\r\n        let seconds = time - 60 * minutes - 3600 * hours;\r\n\r\n        let strHours: string = '';\r\n        let strMinutes: string = '';\r\n        let strSeconds: string = '';\r\n        hours < 10 ? strHours = \"0\" + hours.toString() : strHours = hours.toString()\r\n        minutes < 10 ? strMinutes = \"0\" + minutes : strMinutes = minutes.toString()\r\n        seconds < 10 ? strSeconds = \"0\" + seconds : strSeconds = seconds.toString()\r\n\r\n        return strHours + \"h \" + strMinutes + \"m \" + strSeconds + \"s\"\r\n    }\r\n\r\n\r\n    const addMyNote = () => {\r\n\r\n        const nextNote = {\r\n            name: `Notatka ${myNotes.length + 1}`,\r\n            description: ''\r\n        }\r\n        setMyNotes([...myNotes, nextNote])\r\n    }\r\n\r\n    const addMyNoteGroup = () => {\r\n        const nextNote = {\r\n            name: `Notatka ${myNotesGroup.length + 1}`,\r\n        }\r\n        setMyNotesGroup([...myNotesGroup, nextNote])\r\n    }\r\n\r\n    const handleChangeMessage = (e) => {\r\n        setMessageInput(e.target.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        const timer = setTimeout(() => {\r\n            setCounter(counter - 1)\r\n            setFormatedCounter(formatSeconds(counter))\r\n        }, 1000)\r\n\r\n        return () => clearTimeout(timer)\r\n    }, [counter])\r\n\r\n    return (\r\n\r\n        <div className=\"my-tools-body\">\r\n\r\n            <div className=\"my-panel my-tools-sticky-note-section\">\r\n               TODO lista kręgu:\r\n\r\n                <div className=\"d-flex\">\r\n                    {myNotes.map((note, index) => (\r\n                        <StickyNote note={note} index={index}/>\r\n                    ))}\r\n\r\n                    <img className=\"my-tools-plus-icon pull-right\" onClick={addMyNote} src={PlusIcon} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"mt-2 p-0 d-flex mr-2\">\r\n\r\n                <div className=\"mr-2 p-0 col-md-8\">\r\n                    <div className=\"my-panel my-tools-meeting-wrapper\">\r\n                        <div className=\"col-md-1 d-flex text-left\">\r\n                            <img className=\"my-tools-icon\" src={Camera}/>\r\n                            <img className=\"my-tools-icon\" src={Mic}/>\r\n\r\n                        </div>\r\n                        <div className=\"my-tools-meeting-header\">\r\n                            Twoje najbliższe spotkanie rozpocznie sie za:\r\n                        </div>\r\n                        <div className=\"my-tools-contdown\">\r\n                            {formatedCounter}\r\n                        </div>\r\n                        <img className=\"online-table\" src={OnlineTable}/>\r\n                    </div>\r\n\r\n                    <div className=\"mt-1 my-panel my-tools-message-wrapper\">\r\n\r\n                        <input onChange={handleChangeMessage} className=\"my-tools-message-input\" placeholder=\"Twoja wiadomosc..\" value={messageInput}/>\r\n                        <img className=\"ml-2\" src={Chat} onClick={() => setMessageInput('')}></img>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"m-0 my-panel col-md-4\" id=\"draggable-wrapper\">\r\n                    Wasze notatki ze spotkania:\r\n\r\n\r\n                    {myNotesGroup.map((note, index) => (\r\n                        <Draggable bounds=\"#draggable-wrapper\">\r\n                            <img className=\"my-tools-sticky-note-draggable\" src={StickyNoteImg}/>\r\n                        </Draggable>\r\n                    ))}\r\n\r\n                    <img className=\"my-tools-plus-icon pull-right\" onClick={addMyNoteGroup} src={PlusIcon} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyTools;","\r\nconst Mentors = () => {\r\n    return (\r\n        <div>\r\n            Prace w budowie... ( widok mentorów)\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Mentors;","import logo from './logo.svg';\r\nimport { Counter } from '../features/counter/Counter';\r\nimport '../styles/allstyles.scss';\r\nimport { Button } from 'react-bootstrap';\r\nimport LoginForm from './LoginForm';\r\nimport React from 'react';\r\nimport RegistrationForm from './RegistrationForm';\r\nimport GroupsView from './GroupsView';\r\nimport AddGroup from \"./AddGroup\";\r\nimport NavigationBar from '../Components/NavigationBar';\r\nimport MentorRegistration from './MentorRegistration';\r\nimport LandingPage from './LandingPage';\r\nimport MyTools from \"./MyTools\";\r\nimport { isUserLoggedIn, userName } from \"../features/usersession/userSessionSlice\"\r\nimport { useAppSelector, } from '../app/hooks';\r\nimport Mentors from './Mentors';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\n\r\nexport default function App() {\r\n\r\n    const isLoggedIn = useAppSelector(isUserLoggedIn);\r\n    const username = useAppSelector(userName);\r\n    //baseName not\r\n    return (\r\n        <Router>\r\n            <NavigationBar isLoggedIn={isLoggedIn} />\r\n            <Switch>\r\n                <Route exact path=\"/singin\">\r\n                    <LoginForm />\r\n                </Route>\r\n                <Route path=\"/signup\">\r\n                    <RegistrationForm />\r\n                </Route>\r\n                <Route path=\"/mentor_registration\">\r\n                    <MentorRegistration />\r\n                </Route>\r\n                <Route path=\"/addGroup\">\r\n                    <AddGroup />\r\n                </Route>\r\n                <Route exact path=\"/myTools\" component={MyTools}>\r\n                </Route>\r\n                <Route path=\"/mentors\">\r\n                    <Mentors />\r\n                </Route>\r\n                <Route path=\"/\">\r\n                    {isLoggedIn && <GroupsView groupsType='example' />}\r\n                    {!isLoggedIn && <LandingPage />}\r\n\r\n                </Route>\r\n\r\n            </Switch>\r\n            <div className=\"main-footer\">\r\n                <span className=\"main-contact\">Kontakt</span>\r\n\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"main-footer-icon-facebook\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#FFF\">\r\n                    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n                    <path\r\n                        d=\"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H4V8l8 5 8-5v10zm-8-7L4 6h16l-8 5z\" />\r\n                </svg>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"main-footer-icon-mail\" enable-background=\"new 0 0 24 24\" height=\"24px\"\r\n                    viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#FFF\">\r\n                    <rect fill=\"none\" height=\"24\" width=\"24\" />\r\n                    <path\r\n                        d=\"M22,12c0-5.52-4.48-10-10-10S2,6.48,2,12c0,4.84,3.44,8.87,8,9.8V15H8v-3h2V9.5C10,7.57,11.57,6,13.5,6H16v3h-2 c-0.55,0-1,0.45-1,1v2h3v3h-3v6.95C18.05,21.45,22,17.19,22,12z\" />\r\n                </svg>\r\n\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\n\r\n// function Topics() {\r\n//   let match = useRouteMatch();\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Grupy</h2>\r\n\r\n//       <ul>\r\n//         <li>\r\n//           <Link to={`${match.url}/IT`}>Grupy ze świata IT</Link>\r\n//         </li>\r\n//         <li>\r\n//           <Link to={`${match.url}/Psychology`}>Grupy ze świata psychologii</Link>\r\n//         </li>\r\n//       </ul>\r\n\r\n//       {/* The Topics page has its own <Switch> with more routes\r\n//           that build on the /topics URL path. You can think of the\r\n//           2nd <Route> here as an \"index\" page for all topics, or\r\n//           the page that is shown when no topic is selected */}\r\n//       <Switch>\r\n//         <Route path={`${match.path}/:topicId`}>\r\n//           {/* <GroupsView groupsType={topicId}/> jakos przekazac*/}\r\n//           <GroupsView groupsType='IT' />\r\n//         </Route>\r\n//         <Route path={match.path}>\r\n//           {/* <GroupsView groupsType='IT' /> */}\r\n//         </Route>\r\n//       </Switch>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise<{ data: number }>((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport { fetchCount } from './counterAPI';\n\nexport interface CounterState {\n  value: number;\n  status: 'idle' | 'loading' | 'failed';\n}\n\nconst initialState: CounterState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount: number) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state: RootState) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount: number): AppThunk => (\n  dispatch,\n  getState\n) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\nimport userSessionSlice from '../features/usersession/userSessionSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n    userSession: userSessionSlice,\r\n  },\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Pages/App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/Button.scss';\nimport { HashRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n\n      <App />\n\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}